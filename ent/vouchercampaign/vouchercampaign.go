// Code generated by ent, DO NOT EDIT.

package vouchercampaign

import (
	"time"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the vouchercampaign type in the database.
	Label = "voucher_campaign"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCampaignID holds the string denoting the campaign_id field in the database.
	FieldCampaignID = "campaign_id"
	// FieldVoucherID holds the string denoting the voucher_id field in the database.
	FieldVoucherID = "voucher_id"
	// FieldStartDay holds the string denoting the start_day field in the database.
	FieldStartDay = "start_day"
	// FieldValidTo holds the string denoting the valid_to field in the database.
	FieldValidTo = "valid_to"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// Table holds the table name of the vouchercampaign in the database.
	Table = "voucher_campaigns"
)

// Columns holds all SQL columns for vouchercampaign fields.
var Columns = []string{
	FieldID,
	FieldCampaignID,
	FieldVoucherID,
	FieldStartDay,
	FieldValidTo,
	FieldCreatedAt,
	FieldUpdatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
)

// OrderOption defines the ordering options for the VoucherCampaign queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByCampaignID orders the results by the campaign_id field.
func ByCampaignID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCampaignID, opts...).ToFunc()
}

// ByVoucherID orders the results by the voucher_id field.
func ByVoucherID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldVoucherID, opts...).ToFunc()
}

// ByStartDay orders the results by the start_day field.
func ByStartDay(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldStartDay, opts...).ToFunc()
}

// ByValidTo orders the results by the valid_to field.
func ByValidTo(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldValidTo, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByUpdatedAt orders the results by the updated_at field.
func ByUpdatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedAt, opts...).ToFunc()
}
